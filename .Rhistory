stepsssy<-ggplot(data=step_completions, aes(x=names.completions))
stepsssy
stepsssy<-ggplot(data=step_completions, aes(x=names.completions.))
stepsssy
steps_completed_chart_ggplot
stepsssy<-ggplot(data=step_completions, aes(x=names.completions., y=completed))
steps_completed_chart_ggplot
stepsssy
step_completions
stepsssy<-ggplot(data=step_completions, aes(x=names.completions., y=completions))
steps_completed_chart_ggplot
stepsssy
stepsssy<-ggplot(data=step_completions, aes(x=names.completions., y=completions))+geom_col
stepsssy<-ggplot(data=step_completions, aes(x=names.completions., y=completions))+geom_col()
stepsssy
stepsssy
steps_completed_chart_ggplot
steps_completed_chart_ggplot +stepsssy
rlang::last_error()
stepsssy
steps_completed_chart_ggplot
stepsssy<-ggplot(data=step_completions, aes(x=step_completions$names.completions., y=completions))+geom_col()
steps_completed_chart_ggplot
stepsssy
stepsssy<-ggplot(data=hold, aes(x=step_completions$names.completions., y=completions))+geom_col()
steps_completed_chart_ggplot
stepsssy
#Barchart of steps completed
step_completions<-pivot_longer(step_completions, completions:started)
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes())
step_completions
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(names.completions.)
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes())
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(names.completions.)
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(names.completions., started)
step_completions
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(y=started)
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(y=started)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(y=started)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(started)
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(aes(y=started))
steps_completed_chart
step_completions<-data.frame(names(completions), completions)
row.names(step_completions)<-NULL
#the below helps order the steps when plotting by designating explicit levels
step_completions$names.completions.<-factor(step_completions$names.completions., levels=step_completions$names.completions.)
#step_completions$week<-ifelse(substr(step_completions$names.completions.,1,1)=="1", 1, ifelse(substr(step_completions$names.completions.,1,1)=="2",2,3))
#what was the code below supposed to do?
step_completions$started<-started
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(aes(y=started))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(aes(y=started))+geom_bar(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(aes(y=started))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=1 aes(y=started))+geom_col(aes(y=completions))
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=1, aes(y=started))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0, aes(y=started))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.2, aes(y=started))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started))+geom_col(aes(y=completions))
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, color="red"))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, color="blue"))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, color="blue"))+geom_col(aes(y=completions))
steps_completed_chart
?aes
step_completions$week<-ifelse(substr(step_completions$names.completions.,1,1)=="1", 1, ifelse(substr(step_completions$names.completions.,1,1)=="2",2,3))
```{r}
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, color="blue"))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, fill=week))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, fill=as.character(week)))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)))+geom_col(aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)))+geom_col(aes(y=completions, fill=as.character(week), colour="#000000"))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week) colour="#000000"))+geom_col(aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week), colour="#000000"))+geom_col(aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week), colour="black"))+geom_col(aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)), colour="black")+geom_col(aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(aes(y=completions, fill=as.character(week)), colour="white")
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=0.95,aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=0.95,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=0.95,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=0.95,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, fill=as.character(week)))+geom_col(alpha=0.95,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=0.95,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.1, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.15, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.2, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.2, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)+ theme(axis.text.x = element_text(angle = 90, hjust = 1, size=8))
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.2, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)+ scale_fill_discrete(name="Week:")+ theme(axis.text.x = element_text(angle = 90, hjust = 1, size=8))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + labs(title="Students who started and Students who finsished each step", x="Step Number", y="Number of Students"), xlab+ geom_col(alpha=0.2, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)+ scale_fill_discrete(name="Week:")+ theme(axis.text.x = element_text(angle = 90, hjust = 1, size=8))
steps_completed_chart<-steps_completed_chart_ggplot + labs(title="Students who started and Students who finsished each step", x="Step Number", y="Number of Students") + geom_col(alpha=0.2, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)+ scale_fill_discrete(name="Week:")+ theme(axis.text.x = element_text(angle = 90, hjust = 1, size=8))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + labs(title="Students who Started and Students who Finished Each Step", x="Step Number", y="Number of Students") + geom_col(alpha=0.2, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)+ scale_fill_discrete(name="Week:")+ theme(axis.text.x = element_text(angle = 90, hjust = 1, size=8))
steps_completed_chart
hold
unique(hold$learner_id)
length(unique(hold$learner_id))
uni_ids
uni_ids$country
unique(uni_ids$country)
which(unique(uni_ids$country)=="CA")
which(unique(uni_ids$country)=="IE")
"GB" %in%c("GB","NZ", "US", "AU", "CA" ,"IE")
maj_ENG_speak<-c("GB","NZ", "US", "AU", "CA" ,"IE")
#Language boxplot
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(x=ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages"), y=retention_time_days))
student_country_plot<-new_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages")))
student_language_plot<-new_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages")))
student_language_plot
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages")))
#Language boxplot
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(x=ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages"), y=retention_time_days))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages")))
student_language_plot
#Language boxplot
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(x=ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages Spoken 1st"), y=retention_time_days))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages Spoken 1st")))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
setwd("~/R/CSC8631- Project")#REMOVE BEFORE SUBMISSION
load.project()
source('src/create_plots.R')
#Logisitic regressions to show increase in odds ratio of buying certificate
uni_ids$na_pass<-ifelse(is.na(uni_ids$pass), F, uni_ids$pass)
fully_p<-glm(purchase_TF~na_pass, data = uni_ids, family="binomial")
retention_time<-glm(purchase_TF~retention_time_days, data = uni_ids, family="binomial")
uni_ids<-mutate(uni_ids, retention_21= ifelse(retention_time_days>=21,1,0))
retention_TF<-glm(purchase_TF~retention_21, data = uni_ids, family="binomial")
colnames(uni_ids)
exp(coef(fully_p[1]+coef(fully_p)[2]))/1+exp(coef(fully_p[1]+coef(fully_p)[2]))
exp(coef(fully_p)[1]+coef(fully_p)[2]))/1+exp(coef(fully_p[1])+coef(fully_p)[2]))
exp(coef(fully_p)[1]+coef(fully_p)[2]))/1+exp(coef(fully_p[1])+coef(fully_p)[2]))
exp(coef(fully_p)[1]+coef(fully_p)[2]))/1+exp(coef(fully_p[1])+coef(fully_p)[2]))
coef(fully_p)[1]+coef(fully_p)[2])
coef(fully_p)[1]+coef(fully_p)[2]
exp(coef(fully_p)[1]+coef(fully_p)[2])/1+exp(coef(fully_p[1])+coef(fully_p)[2])
ln_p<-coef(fully_p)[1]+coef(fully_p)[2])
ln_p<-coef(fully_p)[1]+coef(fully_p)[2]
exp(ln_p)
1.125/2.125
ln_p/ln_p+1
ln_p<-coef(fully_p)[1]+coef(fully_p)[2]
ln_p/ln_p+1
ln_p
ln_p/(ln_p+1)
exp(ln_p)/1+exp(ln_p)
1+exp(ln_p)
exp(ln_p)
1.125
1.125/2.125
exp(ln_p)/(1+exp(ln_p))
prob_given_coef<-exp(ln_p)/(1+exp(ln_p))
coef(fully_p)[1]
exp(5.671221 )
exp(coef(fully_p)[1])
exp(-5.671221 )
p_no<-exp(coef(fully_p)[1])
p_no/(p_no+1)
0.003443658+1
0.003443658/1.003444
p_no/(p_no+1)
prob_given_no_coef<-
odds_increase<-c(exp(coef(fully_p)[2]), exp(coef(retention_TF)[2]))
p_no
uni_ids$na_pass<-ifelse(is.na(uni_ids$pass), F, uni_ids$pass)
fully_p<-glm(purchase_TF~na_pass, data = uni_ids, family="binomial")
retention_time<-glm(purchase_TF~retention_time_days, data = uni_ids, family="binomial")
uni_ids<-mutate(uni_ids, retention_21= ifelse(retention_time_days>=21,1,0))
retention_TF<-glm(purchase_TF~retention_21, data = uni_ids, family="binomial")
ln_p<-coef(fully_p)[1]+coef(fully_p)[2]
prob_given_coef<-exp(ln_p)/(1+exp(ln_p))
p_no<-exp(coef(fully_p)[1])
prob_given_no_coef<-p_no/(p_no+1)
ln_p_retention_time<-coef(retention_time)[1]+coef(retention_time)[2]
prob_given_coef_retention_time<-exp(ln_p_retention_time)/(1+exp(ln_p_retention_time))
p_no_retention_time<-exp(coef(retention_time)[1])
prob_given_no_coef_retention_time<-p_no_retention_time/(p_no_retention_time+1)
odds_increase<-c(exp(coef(retention_time)[2]), exp(coef(retention_time)[2]))
logit_link <- function(model)
{
ln_p<-coef(model)[1]+coef(model)[2]
prob_given_coef<-exp(ln_p)/(1+exp(ln_p))
p_no<-exp(coef(model)[1])
prob_given_no_coef<-p_no/(p_no+1)
return(c(prob_given_coef, prob_given_no_coef))
}
prob_given_no_coef
prob_given_coef
logit_link(fully_p)
fully_paticipated<-logit_link(fully_p)[1]
fully_paticipated
fully_paticipated_p<-logit_link(fully_p)[1]
fully_paticipated_p<-logit_link(fully_p)[1]
DNF_p<-logit_link(fully_p)[2]
retained_21_plus<-logit_link(retention_time)[1]
retained_short<-logit_link(retention_time)[2]
probs_data<- data.frame(Condition=c("Fully Participated", "Retained >= 21 days"), 'Probability When Not'=c(DNF_p, retained_short), 'Probability Given'=c(fully_paticipated_p, retained_21_plus))
probs_data
logit_link(retention_time
)
coef(retention_time)
retained_21_plus<-logit_link(retention_TF)[1]
retained_short<-logit_link(retention_TF)[2]
probs_data<- data.frame(Condition=c("Fully Participated", "Retained >= 21 days"), 'Probability When Not'=c(DNF_p, retained_short), 'Probability Given'=c(fully_paticipated_p, retained_21_plus))
probs_data
coef(retention_TF)
exp(1.731199)
0.529/0.003
prob_data
probs_data
summary(retention_TF)
leaving_reason<-left_join(repeat_students,
cyber.security.6_leaving.survey.responses,
by=c("learner_id"))
knitr::kable(leaving_reason[!is.na(leaving_reason$leaving_reason), "leaving_reason"])l
leaving_reason<-left_join(repeat_students,
cyber.security.6_leaving.survey.responses,
by=c("learner_id"))
knitr::kable(leaving_reason[!is.na(leaving_reason$leaving_reason), "leaving_reason"])
knitr::kable(probs_data)
probs_data
knitr::kable(probs_data)
colnames(probs_data)
corr_caption<-"A correlation matrix of the whether or somone fully participated (pass), the number of right questions they answered (question_score), the number of questions they answered (Q_count) and the number of questions they got right out of the number of questions they answered (mean)."
```{r}
corr_caption<-"A correlation matrix of the whether or somone fully participated (pass), the number of right questions they answered (question_score), the number of questions they answered (Q_count) and the number of questions they got right out of the number of questions they answered (mean)."
correlation_matrix<-uni_ids[,c("pass", "question_score", "Q_count", "mean")]%>%
as.matrix(nrow=nrow(uni_ids), ncol=3)%>%
cor(use = "complete.obs", method="pearson")
corr_caption<-"A correlation matrix of the whether or somone fully participated (pass), the number of right questions they answered (question_score), the number of questions they answered (Q_count) and the number of questions they got right out of the number of questions they answered (mean)."
knitr::kable(correlation_matrix, caption=corr_caption)
knitr::kable(summary(uni_ids))
caption_uni_ids<-"A summary of all of the data collected into the primary dataset used throughout uni_ids named after its 1st column filled with learner ids."
knitr::kable(summary(uni_ids), caption=)
knitr::kable(summary(uni_ids), caption=caption_uni_ids, format = "html", table.attr = "style='width:30%;'")
knitr::kable(summary(uni_ids), caption=caption_uni_ids, format = "html", table.attr = "style='width:40%;'")
knitr::kable(summary(uni_ids), caption=caption_uni_ids)%>%
kable_styling(full_width = T)
kableExtra
install.packages("kableExtra" )
knitr::kable(summary(uni_ids), caption=caption_uni_ids)%>%
kable_styling(full_width = T)
library(ka
asdf)
library(kableExtra)
knitr::kable(summary(uni_ids), caption=caption_uni_ids)%>%
kable_styling(full_width = T)
knitr::kable(summary(uni_ids), caption=caption_uni_ids)
knitr::kable(summary(uni_ids), caption=caption_uni_ids, format = "html", table.attr = "style='width:30%;'")
library(kableExtra)
library(ProjectTemplate)
setwd("~/R/CSC8631- Project")#REMOVE BEFORE SUBMISSION
load.project()
source('src/create_plots.R')
summary(uni_ids)
#knitr::kable(summary(uni_ids), caption=caption_uni_ids)
#scale_fill_manual uni_ids$last_step_completed
stage_complete
knitr::kable(correlation_matrix, caption=corr_caption)
plot(uni_ids$mean, uni_ids$Q_count, col=uni_ids$pass+1)
plot(rep(c(5,10,25,50,75,95,100),13), t(cyber.security.7_video.stats[,9:15]),
type="p", col=1:13, ylab= "Percentage still Viewing- %",
xlab = "Percentage of Video Watched- %",
main= "7th Dataset Video Stats Watchtime vs Students Still Watching")
video_boxplot
cat(statmentm2, "\n", statementm1, "\n", statment0, "\n", statement1,
"\n", statment2, "\n", statment3, "\n", statment4, "\n", statement5,
"\n", statment6, "\n", statment7, "\n", statment8, "\n")
leaving_reason<-left_join(repeat_students,
cyber.security.6_leaving.survey.responses,
by=c("learner_id"))
knitr::kable(leaving_reason[!is.na(leaving_reason$leaving_reason), "leaving_reason"])
leaving_reason2<-left_join(repeat_students, cyber.security.7_leaving.survey.responses, by=c("learner_id"))
knitr::kable(leaving_reason2[!is.na(leaving_reason2$leaving_reason), "leaving_reason"])
single_reason
knitr::kable(general_leaving_reason)
pass_graph
student_country_plot
purchase_bar
knitr::kable(probs_data)
steps_completed_chart
student_language_plot
student_language_plot_25
plot_countries
ggplot(uni_ids, aes(mean, Q_coujnt, fill=pass))+geom_point()
ggplot(uni_ids, aes(mean, Q_count, fill=pass))+geom_point()
ggplot(uni_ids, aes(mean, Q_count, fill=pass+1))+geom_point()
ggplot(uni_ids, aes(mean, Q_count, fill=ifelse(pass==1, "red", "none"))+geom_point()
ggplot(uni_ids, aes(mean, Q_count, fill=ifelse(pass==1, "red", "none")+geom_point()
ggplot(uni_ids, aes(mean, Q_count, fill=ifelse(pass==1, "red", "none"))+geom_point()
plot(uni_ids$mean, uni_ids$Q_count, col=uni_ids$pass+1)
plot(uni_ids$mean, uni_ids$Q_count, col=uni_ids$pass+1)
ggplot(uni_ids, aes(mean, Q_count, fill=ifelse(pass==1, "red", "none"))+geom_point()
ggplot(data=uni_ids, aes(x=mean,y= Q_count, fill=ifelse(pass==1, "red", "none")))+geom_point()
ggplot(data=uni_ids, aes(x=mean,y= Q_count, color=ifelse(pass==1, "red", "none")))+geom_point()
ggplot(data=uni_ids, aes(x=mean,y= Q_count, color=ifelse(pass==1, "#FF0000", "none")))+geom_point()
ggplot(data=uni_ids, aes(x=mean,y= Q_count, color=ifelse(pass==1, "#FF0000", ifels(is.na(pass), "none","none"))))+geom_point()
ggplot(data=uni_ids, aes(x=mean,y= Q_count, color=ifelse(pass==1, "#FF0000", ifelse(is.na(pass), "none","none"))))+geom_point()
ggplot(data=uni_ids, aes(x=mean,y= Q_count, color=ifelse(!is.na(pass) & pass!=1, "#FF0000", ifelse(is.na(pass), "none","none"))))+geom_point()
ggplot(data=uni_ids, aes(x=mean,y= Q_count, color=ifelse(!is.na(pass) & pass!=1, "#FF0000", "none")))+geom_point()
ggplot(data=uni_ids, aes(x=mean,y= Q_count, color=ifelse(!is.na(pass) & pass==1, "#FF0000", "none")))+geom_point()
ggplot(data=uni_ids, aes(x=mean,y= Q_count, color=ifelse(!is.na(pass) & pass==1, "#FF0000", "none")))+geom_point()+theme(legend.position = "none")
ggplot(data=uni_ids[!is.na(uni_ids$mean)], aes(x=mean,y= Q_count, color=ifelse(!is.na(pass) & pass==1, "#FF0000", "none")))+geom_point()+theme(legend.position = "none")
ggplot(data=uni_ids[!is.na(uni_ids$mean),], aes(x=mean,y= Q_count, color=ifelse(!is.na(pass) & pass==1, "#FF0000", "none")))+geom_point()+theme(legend.position = "none")
mean_vs_Q_count<-ggplot(data=uni_ids[!is.na(uni_ids$mean),], aes(x=mean,y= Q_count, color=ifelse(!is.na(pass) & pass==1, "#FF0000", "none")))+geom_point()+theme(legend.position = "none")
source('src/mean_vs_Q_count.R')
```{r, include=FALSE}
source('src/mean_vs_Q_count.R')
source('src/mean_vs_Q_count.R')
source("~/R/CSC8631- Project/src/mean_vs_Q_count.R")
setwd("~/R/CSC8631- Project")
source('src/mean_vs_Q_count.R')
library(ProjectTemplate)
setwd("~/R/CSC8631- Project")#REMOVE BEFORE SUBMISSION
load.project()
source('src/create_plots.R')
source('src/mean_vs_Q_count.R')
source('./src/mean_vs_Q_count.R')
source('/src/mean_vs_Q_count.R')
setwd("~/R/CSC8631- Project")#REMOVE BEFORE SUBMISSION
source('/src/mean_vs_Q_count.R')
source('src/create_plots.R')
source('/src/mean_vs_Q_count.R')
source('src/create_plots.R')
setwd("~/CSC8631- Project")#REMOVE BEFORE SUBMISSION
/R/
setwd("~/R/CSC8631- Project")#REMOVE BEFORE SUBMISSION
setwd("~/CSC8631- Project")#REMOVE BEFORE SUBMISSION
getwd()
source('/src/mean_vs_Q_count.R')
source('src/mean_vs_Q_count.R')
source('src/mean_vs_Q_count.R')
getwd()
source('/src/mean_vs_Q_count.R')
source('src/mean_vs_Q_count.R')
getwd()
location<-getwd()
setwd(location)
source('src/mean_vs_Q_count.R')
source('src\mean_vs_Q_count.R')
location<-getwd()
setwd(location)
source('src/mean_vs_Q_count.R')
?source
source('src/create_plots.R')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
setwd("~/R/CSC8631- Project")#REMOVE BEFORE SUBMISSION
load.project()
source('src/create_plots.R')
summary(uni_ids)
#knitr::kable(summary(uni_ids), caption=caption_uni_ids)
#scale_fill_manual uni_ids$last_step_completed
stage_complete
knitr::kable(correlation_matrix, caption=corr_caption)
location<-getwd()
setwd(location)
source('src/mean_vs_Q_count.R')
plot(rep(c(5,10,25,50,75,95,100),13), t(cyber.security.7_video.stats[,9:15]),
type="p", col=1:13, ylab= "Percentage still Viewing- %",
xlab = "Percentage of Video Watched- %",
main= "7th Dataset Video Stats Watchtime vs Students Still Watching")
video_boxplot
cat(statmentm2, "\n", statementm1, "\n", statment0, "\n", statement1,
"\n", statment2, "\n", statment3, "\n", statment4, "\n", statement5,
"\n", statment6, "\n", statment7, "\n", statment8, "\n")
leaving_reason<-left_join(repeat_students,
cyber.security.6_leaving.survey.responses,
by=c("learner_id"))
knitr::kable(leaving_reason[!is.na(leaving_reason$leaving_reason), "leaving_reason"])
leaving_reason2<-left_join(repeat_students, cyber.security.7_leaving.survey.responses, by=c("learner_id"))
knitr::kable(leaving_reason2[!is.na(leaving_reason2$leaving_reason), "leaving_reason"])
single_reason
knitr::kable(general_leaving_reason)
pass_graph
student_country_plot
purchase_bar
knitr::kable(probs_data)
steps_completed_chart
student_language_plot
student_language_plot_25
plot_countries
mean_vs_Q_count<-ggplot(data=uni_ids[!is.na(uni_ids$mean),], aes(x=mean,y= Q_count, color=ifelse(!is.na(pass) & pass==1, "#FF0000", "none")))+
geom_point()+theme(legend.position = "none")+ labs(title="Quiz Score Vs Number of Questions Answered", x="Correct Questions Answered Divided by All Questions Answered" y="Number of Questions Answered")
mean_vs_Q_count<-ggplot(data=uni_ids[!is.na(uni_ids$mean),], aes(x=mean,y= Q_count, color=ifelse(!is.na(pass) & pass==1, "#FF0000", "none")))+
geom_point()+theme(legend.position = "none")+ labs(title="Quiz Score Vs Number of Questions Answered", x="Correct Questions Answered Divided by All Questions Answered" y="Number of Questions Answered")
mean_vs_Q_count<-ggplot(data=uni_ids[!is.na(uni_ids$mean),], aes(x=mean,y= Q_count, color=ifelse(!is.na(pass) & pass==1, "#FF0000", "none")))+geom_point()+theme(legend.position = "none")+ labs(title="Quiz Score Vs Number of Questions Answered", x="Correct Questions Answered Divided by All Questions Answered" y="Number of Questions Answered")
mean_vs_Q_count<-ggplot(data=uni_ids[!is.na(uni_ids$mean),], aes(x=mean,y= Q_count, color=ifelse(!is.na(pass) & pass==1, "#FF0000", "none")))+geom_point()+theme(legend.position = "none")+ labs(title="Quiz Score Vs Number of Questions Answered", x="Correct Questions Answered Divided by All Questions Answered", y="Number of Questions Answered")
mean_vs_Q_count<-ggplot(data=uni_ids[!is.na(uni_ids$mean),], aes(x=mean,y= Q_count, color=ifelse(!is.na(pass) & pass==1, "#FF0000", "none")))+
geom_point()+theme(legend.position = "none")+ labs(title="Quiz Score Vs Number of Questions Answered", x="Correct Questions Answered Divided by All Questions Answered", y="Number of Questions Answered")
mean_vs_Q_count
single_reason
knitr::kable(general_leaving_reason)
knitr::kable(general_leaving_reason, caption="The reason and frequency that reason was given for leaving the course by single attempt students (NAs have been removed).")
pass_graph
student_country_plot
knitr::kable(cat(statmentm2, "\n", statementm1, "\n", statment0, "\n", statement1,
"\n", statment2, "\n", statment3, "\n", statment4, "\n", statement5,
"\n", statment6, "\n", statment7, "\n", statment8, "\n"))
cat(statmentm2, "\n", statementm1, "\n", statment0, "\n", statement1,
"\n", statment2, "\n", statment3, "\n", statment4, "\n", statement5,
"\n", statment6, "\n", statment7, "\n", statment8, "\n")
leaving_reason<-left_join(repeat_students,
cyber.security.6_leaving.survey.responses,
by=c("learner_id"))
knitr::kable(leaving_reason[!is.na(leaving_reason$leaving_reason), "leaving_reason"], caption="table of leaving reasons for repeat students in the 6th datset (their first monitored attempt)")
student_country_plot
purchase_bar
knitr::kable(probs_data)
knitr::kable(probs_data, caption= "Output from 2 separate logistic regressions given that a student fully participated in the course or was retained for 21 days or more, against wheather or not they purchased the certificate (1 being a purchase, 0 being no purchase)")
steps_completed_chart
student_language_plot
student_language_plot_25
plot_countries
source(src/pass_graph.R)
source("src/pass_graph.R")
pass_graph
pass_graph<-new_boxplot_graph+geom_boxplot(aes(group=ifelse(is.na(pass), F, pass)))+ labs(title="Boxplot of Retention time split by students who Fully Participated and Those That Did Not", x="Fully Participated?", y="Retention time in Days")
pass_graph
pass_graph<-new_boxplot_graph+geom_boxplot(aes(group=ifelse(is.na(pass), F, pass)))+ labs(title="Boxplot of Retention time split by student Participation", x="Fully Participated?", y="Retention time in Days")
source("src/pass_graph.R")
pass_graph
pass_graph<-new_boxplot_graph+geom_boxplot(aes(group=ifelse(is.na(pass), F, pass)))+ labs(title="Boxplot of Retention Time Split by Student Participation", x="Fully Participated?", y="Retention time in Days")
pass_graph
student_country_plot<-new_boxplot_graph+geom_boxplot(aes(group= ifelse(country=="GB", "Great Britain", "International")))+labs(title="Boxplots For Retention Time Split by student Inter or Intra Nationality")
student_country_plot
student_country_plot<-new_boxplot_graph+geom_boxplot(aes(group= ifelse(country=="GB", "Great Britain", "International")))
student_country_plot
new_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(x=ifelse(country=="GB", "Great Britain", "International"), y=retention_time_days))
student_country_plot<-new_boxplot_graph+geom_boxplot(aes(group= ifelse(country=="GB", "Great Britain", "International")))+labs(title="Boxplots For Retention Time Split by student Inter or Intra Nationality")
student_country_plot
new_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(x=ifelse(country=="GB", "Great Britain", "International"), y=retention_time_days))
student_country_plot<-new_boxplot_graph+geom_boxplot(aes(group= ifelse(country=="GB", "Great Britain", "International")))+labs(title="Boxplots For Retention Time Split by student Inter or Intra Nationality",y="Retention Time in Days", x="Student detected to be in Great Britain or International")
student_country_plot
purchase_bar<-plot_bar + geom_col(fill="#ADD8E6") + theme(legend.position = "none")+geom_text(aes(label = purchased), vjust = 2)+labs(title="Groups by Certificate purchases", x="Groups", y="Number of Certificate Purchases")
purchase_bar
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages Spoken 1st")))+labs(title="Retention Time by Whether the Students Detected Country Majoritively Speaks English")
student_language_plot
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages Spoken 1st")))+labs(title="Retention Time by Whether the Students Detected Country Primarily Speaks English")
student_language_plot
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages Spoken 1st")))+labs(title="Retention Time by Whether the Student's Detected Country \n Primarily Speaks English")
student_language_plot
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages Spoken 1st")))+labs(title="Retention Time by Whether the Student's Detected Country \nPrimarily Speaks English")
student_language_plot
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages Spoken 1st")))+labs(title="Retention Time by Whether the Student's Detected Country \nPrimarily Speaks English", x="Groups", y="Retention Time in Days")
student_language_plot
student_language_plot_25<-language_boxplot_graph_25+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")+labs(title="Retention Time by Student's Detected Country")
student_language_plot_25
student_language_plot_25<-language_boxplot_graph_25+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")+labs(title="Retention Time by Student's Detected Country", x="Detected Country", y="Retention Time in Days")
student_language_plot_25
plot_countries<-ggplot(data = country_retention[country_retention$n_All>25,], aes(country_name, y=n_All))+geom_col()+ coord_flip()+labs(title="Number of Students Enrolled by Country", x="Number of Students Enrolled", y="Detected Country")
plot_countries
plot_countries<-ggplot(data = country_retention[country_retention$n_All>25,], aes(country_name, y=n_All))+geom_col()+ coord_flip()+labs(title="Number of Students Enrolled by Country", y="Number of Students Enrolled", x="Detected Country")
plot_countries
