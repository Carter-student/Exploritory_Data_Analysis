steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(aes(y=started))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(aes(y=started))+geom_bar(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(aes(y=started))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=1 aes(y=started))+geom_col(aes(y=completions))
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=1, aes(y=started))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0, aes(y=started))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.2, aes(y=started))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started))+geom_col(aes(y=completions))
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, color="red"))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, color="blue"))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, color="blue"))+geom_col(aes(y=completions))
steps_completed_chart
?aes
step_completions$week<-ifelse(substr(step_completions$names.completions.,1,1)=="1", 1, ifelse(substr(step_completions$names.completions.,1,1)=="2",2,3))
```{r}
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, color="blue"))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, fill=week))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, fill=as.character(week)))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)))+geom_col(aes(y=completions))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)))+geom_col(aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)))+geom_col(aes(y=completions, fill=as.character(week), colour="#000000"))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week) colour="#000000"))+geom_col(aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week), colour="#000000"))+geom_col(aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week), colour="black"))+geom_col(aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)), colour="black")+geom_col(aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(aes(y=completions, fill=as.character(week)), colour="white")
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=0.95,aes(y=completions, fill=as.character(week)))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=0.95,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.5, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=0.95,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=0.95,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, fill=as.character(week)))+geom_col(alpha=0.95,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=0.95,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.3, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.1, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.15, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.2, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.2, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)+ theme(axis.text.x = element_text(angle = 90, hjust = 1, size=8))
steps_completed_chart
steps_completed_chart_ggplot<-ggplot(data= step_completions, aes(names.completions.))
steps_completed_chart<-steps_completed_chart_ggplot + geom_col(alpha=0.2, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)+ scale_fill_discrete(name="Week:")+ theme(axis.text.x = element_text(angle = 90, hjust = 1, size=8))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + labs(title="Students who started and Students who finsished each step", x="Step Number", y="Number of Students"), xlab+ geom_col(alpha=0.2, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)+ scale_fill_discrete(name="Week:")+ theme(axis.text.x = element_text(angle = 90, hjust = 1, size=8))
steps_completed_chart<-steps_completed_chart_ggplot + labs(title="Students who started and Students who finsished each step", x="Step Number", y="Number of Students") + geom_col(alpha=0.2, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)+ scale_fill_discrete(name="Week:")+ theme(axis.text.x = element_text(angle = 90, hjust = 1, size=8))
steps_completed_chart
steps_completed_chart<-steps_completed_chart_ggplot + labs(title="Students who Started and Students who Finished Each Step", x="Step Number", y="Number of Students") + geom_col(alpha=0.2, aes(y=started, fill=as.character(week)), colour="#082321")+geom_col(alpha=1,aes(y=completions, fill=as.character(week)), width=0.5)+ scale_fill_discrete(name="Week:")+ theme(axis.text.x = element_text(angle = 90, hjust = 1, size=8))
steps_completed_chart
hold
unique(hold$learner_id)
length(unique(hold$learner_id))
uni_ids
uni_ids$country
unique(uni_ids$country)
which(unique(uni_ids$country)=="CA")
which(unique(uni_ids$country)=="IE")
"GB" %in%c("GB","NZ", "US", "AU", "CA" ,"IE")
maj_ENG_speak<-c("GB","NZ", "US", "AU", "CA" ,"IE")
#Language boxplot
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(x=ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages"), y=retention_time_days))
student_country_plot<-new_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages")))
student_language_plot<-new_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages")))
student_language_plot
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages")))
#Language boxplot
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(x=ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages"), y=retention_time_days))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages")))
student_language_plot
#Language boxplot
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(x=ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages Spoken 1st"), y=retention_time_days))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages Spoken 1st")))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
library(ProjectTemplate)
setwd("~/R/CSC8631- Project")#REMOVE BEFORE SUBMISSION
load.project()
source('src/create_plots.R')
summary(uni_ids)
#scale_fill_manual uni_ids$last_step_completed
stage_complete
correlation_matrix
plot(uni_ids$mean, uni_ids$Q_count, col=uni_ids$pass+1)
plot(rep(c(5,10,25,50,75,95,100),13), t(cyber.security.7_video.stats[,9:15]),
type="p", col=1:13, ylab= "Percentage still Viewing- %",
xlab = "Percentage of Video Watched- %",
main= "7th Dataset Video Stats Watchtime vs Students Still Watching")
video_boxplot
cat(statmentm2, "\n", statementm1, "\n", statment0, "\n", statement1,
"\n", statment2, "\n", statment3, "\n", statment4, "\n", statement5,
"\n", statment6, "\n", statment7, "\n", statment8, "\n")
leaving_reason<-left_join(repeat_students,
cyber.security.6_leaving.survey.responses,
by=c("learner_id"))
leaving_reason[!is.na(leaving_reason$leaving_reason), "leaving_reason"]
leaving_reason2<-left_join(repeat_students, cyber.security.7_leaving.survey.responses, by=c("learner_id"))
leaving_reason2[!is.na(leaving_reason2$leaving_reason), "leaving_reason"]
single_reason
general_leaving_reason
pass_graph
student_country_plot
purchase_bar
odds_increase
steps_completed_chart
student_language_plot
hold
cyber.security.1_enrolments
cyber.security.1_enrolments$en
cyber.security.1_enrolments$enrolled_at
cyber.security.1_enrolments$enrolled_at %>% as.POSIXct(format="%Y-%m-%d %H:%M:%S")
View(cyber.security.7_enrolments)
ggplot(data)uni_ids
uni_ids
colnames(uni_ids)
#Retention by detected country needs to be created
which(!is.na(unique(uni_ids$country)) & uni_ids!="--")
#Retention by detected country needs to be created
which(!is.na(unique(uni_ids$country)) & uni_ids$country!="--")
uni_ids$country!="--"
!is.na(unique(uni_ids$country))
#Retention by detected country needs to be created
which(!is.na(unique(uni_ids$country)) & uni_ids$country!="--")
!is.na(unique(uni_ids$country)) & uni_ids$country!="--"
#Retention by detected country needs to be created
which(!is.na(unique(uni_ids$country)) & unique(uni_ids$country)!="--")
#Retention by detected country needs to be created
#filter out NA and "--" from the country data we have already and find unique countries
country_list<-unique(uni_ids$country)[which(!is.na(unique(uni_ids$country)) & unique(uni_ids$country)!="--")]
colnames(uni_ids)
#find the median retention time for each country
sapply(country_list, function(i){median(filter(uni_ids, country=i)$retention_time_days)})
#find the median retention time for each country
sapply(country_list, function(i){median(filter(uni_ids, country==i)$retention_time_days)})
#find the median retention time for each country
sapply(country_list, function(i){median(select(filter(uni_ids, country==i), retention_time_days))})
filter(uni_ids, country=="GB")$retention_time_days
#find the median retention time for each country
sapply(country_list, function(i){median(filter(uni_ids, country==i & !is.na(retention_time_days))$retention_time_days)})
#find the median retention time for each country
retention_time<-sapply(country_list, function(i){median(filter(uni_ids, country==i & !is.na(retention_time_days))$retention_time_days)})
data.frame(names(retention_time), retention_time)
#find the median retention time for each country
retention_time<-sapply(country_list, function(i){
x<-filter(uni_ids, country==i & !is.na(retention_time_days))$retention_time_days
c(median(x), quantile(x)[2], quantile(x)[4])})
retention_time
#find the median retention time for each country
retention_time<-sapply(country_list, function(i){
x<-filter(uni_ids, country==i & !is.na(retention_time_days))$retention_time_days
c(median(x), quantile(x)[2], quantile(x)[4], length(x))})
retention_time
names(retention_time)
filter(uni_ids, country==GB & !is.na(retention_time_days))$retention_time_days %>% median()
filter(uni_ids, country=="GB" & !is.na(retention_time_days))$retention_time_days %>% median()
filter(uni_ids, country=="GB" & !is.na(retention_time_days))$retention_time_days %>% quantile()
retention_time[1]
retention_time
retention_time[1]
retention_time[2]
length(country_list)
?seq
158*4
seq(1,length(country_list)*4, 4)
retention_time[seq(1,length(country_list)*4, 4)]
retention_time[seq(1,length(country_list)*4, 4)
))
retention_time
country_retention<-data.frame(country_name=country_list, median=retention_time[seq(1,length(country_list)*4, 4)], LQ=retention_time[seq(2,length(country_list)*4, 4)], UQ=retention_time[seq(3,length(country_list)*4, 4)], n=retention_time[seq(4,length(country_list)*4, 4)] )
country_retention
complete.cases(country_retention)
country_retention
#going forward we only want to deal with countries with a recorded retention time
#so we omit incomplete cases
country_retetnion<-country_retention[complete.cases(country_retention),]
#going forward we only want to deal with countries with a recorded retention time
#so we omit incomplete cases
country_retention<-country_retention[complete.cases(country_retention),]
country_retention
ggplot(country_retention,aes(country_name,median))
ggplot(country_retention,aes(country_name,median))+geom_col()
ggplot(country_retention,aes(country_name,median,fill=(ifelse(country_name %in% maj_ENG_speak))))+geom_col()
ggplot(country_retention,aes(country_name,median,fill=(ifelse(country_name %in% maj_ENG_speak,1,0))))+geom_col()
ggplot_country_data<-ggplot(country_retention,aes(country_name,median,fill=(ifelse(country_name %in% maj_ENG_speak,1,0))))
ggplot_country_data+ geom_col()+ theme(legend.position = "none")
?geom_errorbar()
ggplot_country_data+ geom_col()+ theme(legend.position = "none")+ geom_errorbar(x=country_name, ymin=LQ, ymax=UQ)
ggplot_country_data+ geom_col()+ theme(legend.position = "none")+ geom_errorbar(data=country_retention,x=country_name, ymin=LQ, ymax=UQ)
country_retention
ggplot_country_data+ geom_col()+ theme(legend.position = "none")+ geom_errorbar(data=country_retention,x=country_name, ymin=LQ, ymax=UQ)
country_retention
colnames(country_retention)
ggplot_country_data+ geom_col()+ theme(legend.position = "none")+ geom_errorbar(data=country_retention,aes(x=country_name, ymin=LQ, ymax=UQ))
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(country, y=retntion_time_days))
student_language_plot<-language_boxplot_graph+geom_boxplot()
student_language_plot
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(country, y=retention_time_days))
student_language_plot<-language_boxplot_graph+geom_boxplot()
student_language_plot
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(country, y=retention_time_days,fill=(ifelse(country_name %in% maj_ENG_speak,1,0))))
student_language_plot<-language_boxplot_graph+geom_boxplot()
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(country, y=retention_time_days,fill=(ifelse(country_name %in% maj_ENG_speak,1,0))))
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(country, y=retention_time_days,fill=(ifelse(country_name %in% maj_ENG_speak,1,0))))
student_language_plot<-language_boxplot_graph+geom_boxplot()
student_language_plot
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(country, y=retention_time_days,fill=(ifelse(country %in% maj_ENG_speak,1,0))))
student_language_plot<-language_boxplot_graph+geom_boxplot()
student_language_plot
student_language_plot<-language_boxplot_graph+geom_boxplot()+ theme(legend.position = "none")
student_language_plot
ggplot_country_data<-ggplot(country_retention,aes(country_name,median,fill=(ifelse(country_name %in% maj_ENG_speak,1,"none"))))
ggplot_country_data+ geom_col()+ theme(legend.position = "none")+ geom_errorbar(data=country_retention,aes(x=country_name, ymin=LQ, ymax=UQ))
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(country, y=retention_time_days,fill=(ifelse(country %in% maj_ENG_speak,1,0))))
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(country, y=retention_time_days,fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot<-language_boxplot_graph+geom_boxplot()+ theme(legend.position = "none")
student_language_plot
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(country, y=retention_time_days,fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot<-language_boxplot_graph+geom_boxplot()+ theme(legend.position = "none")+ coord_flip()
student_language_plot
student_language_plot<-theme(x.axis.text=element_text(size=6))+language_boxplot_graph+geom_boxplot()+ theme(legend.position = "none")+ coord_flip()
student_language_plot<-theme(axis.text.x=element_text(size=6))+language_boxplot_graph+geom_boxplot()+ theme(legend.position = "none")+ coord_flip()
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(country, y=retention_time_days,fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))+theme(axis.text.x=element_text(size=6))+
student_language_plot<-language_boxplot_graph+geom_boxplot()+ theme(legend.position = "none")+ coord_flip()
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(country, y=retention_time_days,fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot<-language_boxplot_graph+geom_boxplot()+ theme(legend.position = "none")+ coord_flip()+theme(axis.text.x=element_text(size=6))
student_language_plot
student_language_plot<-language_boxplot_graph+geom_boxplot()+ theme(legend.position = "none")+ coord_flip()+theme(axis.text=element_text(size=6))
student_language_plot
student_language_plot
student_language_plot
seq(1,length(country_list)*4, 4)
source("~/R/CSC8631- Project/munge/01-A.R")
library(ProjectTemplate)
setwd("~/R/CSC8631- Project")#REMOVE BEFORE SUBMISSION
load.project()
library(ProjectTemplate)
setwd("~/R/CSC8631- Project")#REMOVE BEFORE SUBMISSION
setwd("~/R/CSC8631- Project")#REMOVE BEFORE SUBMISSION
load.project()
migrate.project()
load.project()
library(ProjectTemplate)
setwd("~/R/CSC8631- Project")#REMOVE BEFORE SUBMISSION
load.project()
source('src/create_plots.R')
summary(uni_ids)
#scale_fill_manual uni_ids$last_step_completed
stage_complete
correlation_matrix
plot(uni_ids$mean, uni_ids$Q_count, col=uni_ids$pass+1)
plot(rep(c(5,10,25,50,75,95,100),13), t(cyber.security.7_video.stats[,9:15]),
type="p", col=1:13, ylab= "Percentage still Viewing- %",
xlab = "Percentage of Video Watched- %",
main= "7th Dataset Video Stats Watchtime vs Students Still Watching")
video_boxplot
cat(statmentm2, "\n", statementm1, "\n", statment0, "\n", statement1,
"\n", statment2, "\n", statment3, "\n", statment4, "\n", statement5,
"\n", statment6, "\n", statment7, "\n", statment8, "\n")
leaving_reason<-left_join(repeat_students,
cyber.security.6_leaving.survey.responses,
by=c("learner_id"))
leaving_reason[!is.na(leaving_reason$leaving_reason), "leaving_reason"]
leaving_reason2<-left_join(repeat_students, cyber.security.7_leaving.survey.responses, by=c("learner_id"))
leaving_reason2[!is.na(leaving_reason2$leaving_reason), "leaving_reason"]
single_reason
general_leaving_reason
pass_graph
student_country_plot
purchase_bar
odds_increase
steps_completed_chart
student_language_plot
arrange(country_retention, n)
#find the median retention time Lower quartile and Upper quartile for each country as well as size
#We determined it was more efficient to run this as one sapply function instead of 4
retention_time<-sapply(country_list, function(i){
x<-filter(uni_ids, country==i & !is.na(retention_time_days))$retention_time_days
length(x)})
#find the median retention time Lower quartile and Upper quartile for each country as well as size
#We determined it was more efficient to run this as one sapply function instead of 4
retention_time<-sapply(country_list, function(i){
x<-filter(uni_ids, country==i & !is.na(retention_time_days))$retention_time_days
length(x)})
#find the number of students from each country that we have a retention time for
retention_time<-sapply(country_list, function(i){
x<-filter(uni_ids, country==i & !is.na(retention_time_days))$retention_time_days
length(x)})
#feeds data from sapply function into dataframe
country_retention<-data.frame(country_name=country_list, n=retention_time )
country_retention
#going forward we only want to deal with countries with a recorded retention time
#so we omit incomplete cases
country_retention<-country_retention[complete.cases(country_retention),]
arrange(country_retention, n)
#going forward we only want to deal with countries with a recorded retention time
#so we omit incomplete cases
country_retention<-country_retention[complete.cases(country_retention),]
country_retention
country_retention
country_retention[country_rention$n>=10]
country_retention[country_retention$n>=10]
country_retention[country_retention$n>=10,]
country_retention[country_retention$n>=10,"country_name"]
which(uni_ids$country%in%country_retention[country_retention$n>=10,"country_name"])
#Remove countries that had less than 10 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=10,"country_name"])
language_boxplot_graph<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(country, retention_time_days))
student_language_plot
student_language_plot
#Remove countries that had less than 10 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=10,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(country, retention_time_days))
student_language_plot
language_boxplot_graph<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(country, retention_time_days))
student_language_plot
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot
#Remove countries that had less than 10 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=40,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot
#Remove countries that had less than 10 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=20,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot
#Remove countries that had less than 10 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=50,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot
#Remove countries that had less than 10 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=100,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot
#Remove countries that had less than 20 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=20,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot
#Remove countries that had less than 20 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=25,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot
country_retention
country_retention["AU",]
#Remove countries that had less than 20 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=50,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot
#Remove countries that had less than 20 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=25,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot
#Language boxplot
language_boxplot_graph<- ggplot(data=uni_ids[!is.na(uni_ids$retention_time_days) & !is.na(uni_ids$country),], aes(x=ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages Spoken 1st"), y=retention_time_days))
student_language_plot<-language_boxplot_graph+geom_boxplot(aes(group= ifelse(country %in% maj_ENG_speak, "Majority Speak English as 1st Language ", "Other Languages Spoken 1st")))
student_language_plot
language_boxplot_graph_25<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot_25<-language_boxplot_graph_25+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")
#Remove countries that had less than 25 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=25,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph_25<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot_25<-language_boxplot_graph_25+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot_25
#We adapted this section of code and the +geom_text() from the following stack Overflow https://stackoverflow.com/questions/44833527/label-boxes-in-ggplot2-boxplot
labeldat = uni_ids %>%
group_by(country, retention_time_days) %>%
summarize(ypos = max(retention_time_days) + .25 ) %>%
inner_join(., country_retention)
country_retention
#We adapted this section of code and the +geom_text() from the following stack Overflow https://stackoverflow.com/questions/44833527/label-boxes-in-ggplot2-boxplot
labeldat = uni_ids %>%
group_by(country, retention_time_days) %>%
summarize(ypos = max(retention_time_days) + .25 ) %>%
inner_join(., country_retention, by=c("country_name "))
#We adapted this section of code and the +geom_text() from the following stack Overflow https://stackoverflow.com/questions/44833527/label-boxes-in-ggplot2-boxplot
labeldat = uni_ids %>%
group_by(country, retention_time_days) %>%
summarize(ypos = max(retention_time_days) + .25 ) %>%
inner_join(., country_retention, by=c("country_name "))
#We adapted this section of code and the +geom_text() from the following stack Overflow https://stackoverflow.com/questions/44833527/label-boxes-in-ggplot2-boxplot
labeldat = uni_ids %>%
group_by(country, retention_time_days) %>%
summarize(ypos = max(retention_time_days) + .25 ) %>%
inner_join(., country_retention)
country_retention
#Remove countries that had less than 25 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=25,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph_25<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot_25<-language_boxplot_graph_25+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")+geom_text(data = country_retention, aes(x=country_name, label = n), position = position_dodge(width = .75),show.legend = FALSE)
student_language_plot_25
student_language_plot_25<-language_boxplot_graph_25+geom_boxplot(data=uni_ids,aes(country, retention_time_days))+ theme(legend.position = "none")+geom_text(data = country_retention, aes(x=country_name, label = n), position = position_dodge(width = .75),show.legend = FALSE)
student_language_plot_25
colnames(uni_ids)
#Remove countries that had less than 25 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=25,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph_25<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
#Remove countries that had less than 25 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=25,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph_25<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot_25<-language_boxplot_graph_25+geom_boxplot(data=uni_ids,aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot_25
#Remove countries that had less than 25 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=25,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph_25<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
country_retention
#Remove countries that had less than 25 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=25,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph_25<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot_25<-language_boxplot_graph_25+geom_boxplot(data=uni_ids,aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot_25
length()
length(country_positions_to_consider)
#Remove countries that had less than 25 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=25,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph_25<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot_25<-language_boxplot_graph_25+geom_boxplot(data=aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot_25<-language_boxplot_graph_25+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot_25
#Remove countries that had less than 25 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=25,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph_25<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot_25<-language_boxplot_graph_25+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot_25
student_language_plot_25<-language_boxplot_graph_25+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")+geom_text(data = country_retention, aes(x=country_name, label = n), position = position_dodge(width = .75),show.legend = FALSE)
student_language_plot_25
student_language_plot_25<-language_boxplot_graph_25+geom_boxplot(data=uni_ids[country_positions_to_consider,],aes(country, retention_time_days))+ theme(legend.position = "none")+geom_text(data = country_retention, aes(x=country_name, label = n), position = position_dodge(width = .75),show.legend = FALSE)
student_language_plot_25
#Remove countries that had less than 25 students as their boxplots are misleading
country_positions_to_consider<-which(uni_ids$country%in%country_retention[country_retention$n>=25,"country_name"] & !is.na(uni_ids$retention_time_days))
language_boxplot_graph_25<- ggplot(data=uni_ids[country_positions_to_consider,], aes(x=country, y=retention_time_days, fill=(ifelse(country %in% maj_ENG_speak,1,"none"))))
student_language_plot_25<-language_boxplot_graph_25+geom_boxplot(aes(country, retention_time_days))+ theme(legend.position = "none")
student_language_plot_25
student_language_plot_25+geom_text(data = country_retention, aes(x=country_name, label = n), position = position_dodge(width = .75),show.legend = FALSE)
student_language_plot_25+geom_text(data = country_retention, aes(x=country_name, y=5, label = n), position = position_dodge(width = .75),show.legend = FALSE)
student_language_plot_25+geom_text(data = country_retention, aes(x=country_name, y=5, label = n), position = position_dodge(width = .75),show.legend = FALSE)
student_language_plot_25
student_language_plot_25 +geom_text(data = country_retention[country_retention$n>=25], aes(x=country_name, y=, label = n), position = position_dodge(width = .75),show.legend = FALSE)
student_language_plot_25 +geom_text(data = country_retention[country_retention$n>=25,], aes(x=country_name, y=, label = n), position = position_dodge(width = .75),show.legend = FALSE)
student_language_plot_25 +geom_text(data = country_retention[country_retention$n>=25,], aes(x=country_name, label = n), position = position_dodge(width = .75),show.legend = FALSE)
student_language_plot_25
retention_time_students<-sapply(country_list, function(i){
x<-filter(uni_ids, country==i )$retention_time_days
length(x)})
#feeds data from sapply function into dataframe
country_retention<-data.frame(country_name=country_list, n=retention_time, n_All=retntion_time_students )
#feeds data from sapply function into dataframe
country_retention<-data.frame(country_name=country_list, n=retention_time, n_All=retention_time_students )
ggplot(data = country_retention[country_retention$n_All>25,], aes(country_name, y=n_ALL))+geom_col()
#feeds data from sapply function into dataframe
country_retention<-data.frame(country_name=country_list, n=retention_time, n_All=retention_time_students )
ggplot(data = country_retention[country_retention$n_All>25,], aes(country_name, y=n_ALL))+geom_col()
country_retention
ggplot(data = country_retention[country_retention$n_All>25,], aes(country_name, y=n_All))+geom_col()
plot_countries<-ggplot(data = country_retention[country_retention$n_All>25,], aes(country_name, y=n_All))+geom_col()+ coord_flip()
plot_countries
plot_countries
